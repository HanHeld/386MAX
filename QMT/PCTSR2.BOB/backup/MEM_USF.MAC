;' $Header:   P:/PVCS/MAX/QMT/MEM_USF.MAV   1.0   05 Sep 1995 16:56:08   HENRY  $
;
; (C) Copyright 1988-1999 Qualitas, Inc.  All rights reserved.
;
; MEM_USF.MAC
;
; Macro for (Unlinked) Stuck-At Fault testing
;
	include MEM_COM.MAC

USFMAC	macro	NAM,SHF,STR,REG,BWD
	local	TST

TST	equ	<USF>

COMMENT|

NAM	=	Test name

SHF	=	Shift amount to convert from Bytes to Units
	=	0 for bytes
	=	1 for words
	=	2 for dwords

STR	=	Structure suffix
	=	'LO'  for bytes
	=	'ELO' for words
	=	'EDD' for dwords

REG	=	Register name
	=	AL  for bytes
	=	AX  for words
	=	EAX for dwords

BWD	=	Byte/Word/Dword letter
	=	'B' for bytes
	=	'W' for words
	=	'D' for dwords

|

	pushad			; Save all EGP registers

; Set initial value for Read/Write 1s up

	mov	REG1UP,-1	; Pattern is 111...111

; Set initial value for Read/Write 0s up

	mov	REG0UP,0	; Pattern is 000...000

; Set initial value for Read/Write 1s down

	mov	REG1DN,-1	; Pattern is 111...111

; Set initial value for Read/Write 0s down

	mov	REG0DN,0	; Pattern is 000...000

CNTOPERS =	0		; Initialize macro operation count

	mov	edx,ecx 	; Save N to restore from later

; ************************** INITIALIZE ****************************************

; Write 0s up

	W0_MAC	NAM,SHF,STR,REG,BWD,TST

; ************************** SEQUENCE #1 ***************************************

; Read 0s and Write 1s up

	R0W1_MAC NAM,SHF,STR,REG,BWD,REG0UP,TST

; ************************** SEQUENCE #2 ***************************************

; Read 1s and Write 0s down

	R1W0DN_MAC NAM,SHF,STR,REG,BWD,REG1UP,TST

@TOTOPERS equ	CNTOPERS + 0	; Save in equate

NAM&BWD&_HALT:
	clc			; Indicate all went well

	jmp	short NAM&BWD&_EXIT ; Join common exit code (note CF=0)


; External NMI or halt

NAM&BWD&_NMIERREXT:
	bt	GL3_FLAG,$GL3_ERRCURB ; Is there an error with current block?
	jc	short NAM&BWD&_EXIT ; Jump if so (note CF=1)

	test	CNT_FLAG,@CNT_HALT ; Did the user request a halt?
	jnz	short NAM&BWD&_HALT ; Jump if so

	mov	edi,NMIADDR	; Get the failing address

;;;;;;; jmp	short NAM&BWD&_NMIERRCOM ; Join common error code


; NMI reading/writing at ES:EDI

NAM&BWD&_NMIERR:
;;;;;;; jmp	short NAM&BWD&_NMIERRCOM ; Join common error code


NAM&BWD&_NMIERRCOM:
	call	DISP_NMIERR	; Display error
	jc	short NAM&BWD&_EXIT ; Jump if we should halt (note CF=1)

	cmp	ax,ax		; Ensure ZF=0 in case we're returning to a JNZ
	jmp	NMIRET		; Continue finding errors


; Mismatch reading 0s at ES:EDI

NAM&BWD&_ERR0:
;;;;;;; jmp	short NAM&BWD&_ERRCOM ; Join common error code


; Mismatch reading 1s at ES:EDI

NAM&BWD&_ERR1:
;;;;;;; jmp	short NAM&BWD&_ERRCOM ; Join common error code


NAM&BWD&_ERRCOM:
	call	DISP_ERR&BWD	; Display error data
				; Return with CF=0 to continue testing
				;		=1 if we should halt
	ret			; Return to the error point

NAM&BWD&_EXIT:
	mov	NMIOFF,0	; Clear NMI error addr
;;;;;;; mov	PATOFF,0	; Clear pattern offset

	popad			; Restore all EGP registers

	ret			; Return to caller

	endm			; USFMAC


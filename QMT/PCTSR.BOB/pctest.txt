PCTEST TSR API

When a PCTEST-compliant program (e.g., RAMexam) starts, it broadcasts 
that fact to any resident programs by calling

	mov si,seg VSNAME	; DS:SI ==> Vendor-specific name
	mov ds,si			; ...
	lea si,VSNAME		; ...
	mov ax,168Ah		; AX = Vendor-specific API call
	int 2Fh 			; Request multiplexor service

On return, if AL == 0, then ES:DI ==> TSR's entry point for this API, 
and where VSNAME == 'PCTEST TSR API, Version 1.01'.

Periodically, RAMexam calls the API as follows:

ES:BX = ptr to the following structure:

PCTSR_STR struc

PCTSR_CMD db	?				; 00:  Command byte (see @PCTSR_xxx below)
PCTSR_ID  dw	?				; 01:  Test ID (see @PCTSR_ID_xxx below)
PCTSR_ADDR dq	?				; 03:  Physical memory address
PCTSR_EXP dq	?				; 0B:  Expected pattern
PCTSR_ACT dq	?				; 13:  Actual pattern
PCTSR_SIZE dd	?				; 1B:  Amount of extended memory in KB (constant)
PCTSR_ETA  dq	?				; 1F:  Estimated time to complete in timer ticks

PCTSR_STR ends

; Command bytes for PCTSR_CMD
								; Type: 				Valid fields
@PCTSR_START equ 0				; Start test:			_ID
@PCTSR_AWAKE equ 1				; Report as awake:		none
@PCTSR_FAIL  equ 2				; Failure:				_ID, _ADDR, _EXP, _ACT
@PCTSR_END	 equ 3				; End of all tests: 	none

; Test IDs for PCTSR_ID

@PCTSR_ID_USF equ 0 			; (Unlinked) Stuck-at fault test
@PCTSR_ID_UTF equ 1 			; (Unlinked) Transition ...
@PCTSR_ID_LIN equ 2 			; Linked Inversion ...
@PCTSR_ID_UIN equ 3 			; Unlinked Inversion ...
@PCTSR_ID_LID equ 4 			; Linked Idempotent ...
@PCTSR_ID_UID equ 5 			; Unlinked Idempotent ...


On Return:
	 AL=00			Success
	 AL=01			Failure


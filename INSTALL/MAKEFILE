#
#	Makefile for INSTALL/UPDATE
#
#	This makefile works with MSC 6.0, LINK a la MSC 6.0, and
#	MASM 5.1
#
#' $Header:   P:/PVCS/MAX/INSTALL/MAKEFILE.__V   1.12   02 Jun 1997 14:02:22   BOB  $
#

!include $(MAXROOT)include\maxnames.mak

!IF "$(COREPROD)" == "386MAX"
VER=MAXIB		# Name of directory and of .EXE to build
ASYS=0			# Set to 0 for 386MAX INSTALL, 1 for BlueMAX INSTALL,
				# 10 for 386MAX UPDATE, 11 for BlueMAX UPDATE
!ELSE
VER=BLUIB
ASYS=1
!ENDIF

PROD=SETUPDOS		# Name of product for BINDIR
MODEL=L 		# Model to use

!IF "$(MODEL)" == "M"   # Determine MASM model flag
AMODEL=MEDIUM
!ELSE
!IF "$(MODEL)" == "C"
AMODEL=COMPACT
!ELSE
!IF "$(MODEL)" == "L"
AMODEL=LARGE
!ELSE
!ERROR Model must be M, C, or L
!ENDIF
!ENDIF
!ENDIF

U=$(MAXROOT)lib\		# UI library
A=$(U)				# UI help engine library
E=$(MAXROOT)asqeng\	# Home of MULTIME.ASM
O=$(VER)\			# version specific .OBJ, .PRO, & .EXE files
G=comn\ 			# Generic .OBJ files
M=$(MAXROOT)maximize\	# MAXIMIZE directory (with POS info)
OLDINC=$(INCLUDE)		# Old INCLUDE value
ALLINC=.;$(O);$(H);$(I);$(Q);$(INCLUDE);$(M) # Search path for .C and .ASM includes
ERRPATH=$(TOOLS)		# Path for ERROUT.COM

LFLAGS=$(CVLINK) /NOD /NOI /st:8192 /map /line /far /seg:300 /ONERR:NOEXE /PackF /PackC
LAFLAGS=/DLANG_$(LANG)
!IF "$(CVER)" == ""
CVER=600
!ENDIF
!IF "$(CVER)" == "700"
OPTFLAGS=/Oslegc
CFLAGS=/W2 /A$(MODEL) /c $(OPTFLAGS) $(LAFLAGS) /Gs
LFLAGS=$(LFLAGS):64000
!ELSE
OPTFLAGS=/Oslegc
CFLAGS=/W3 /A$(MODEL) /c $(OPTFLAGS) $(LAFLAGS) /Gs /WX /FPa
!ENDIF
CVFLAGS=/Zd
CFLAGS=$(CFLAGS) $(CVFLAGS)
AFLAGS=/DMODEL=$(AMODEL) /DBETA=$(BETA) /DASYS=$(ASYS) $(LAFLAGS) /Mx /DC$(CVER) $(CVFLAGS)
AS=masm
LIBS=$(U)$(MODEL)quilibr.lib

# .LIBs we don't know the path for
!IF "$(CVER)" == "700"
GLIBS=$(MODEL)libce.lib oldnames.lib $(MODEL)help.lib implode.lib ver$(MODEL).lib
!ELSE
GLIBS=$(MODEL)libca.lib
!ENDIF

# Define LSTMAC macro to be added to the END of MASM command lines.
# Creates assembler listing in directory $(LST)
!IFDEF LST
LSTMAC=,$(LST)\$(@B)
!ELSE
LSTMAC=
!ENDIF

{$(M)}.asm{$(O)}.obj:
	set INCLUDE=$(ALLINC)
	$(AS) $(AFLAGS) $(M)$(@B),$* $(LSTMAC);
	set INCLUDE=$(OLDINC)

.asm{$(O)}.obj:
	set INCLUDE=$(ALLINC)
	$(AS) $(AFLAGS) $(@B),$* $(LSTMAC);
	set INCLUDE=$(OLDINC)

{$(E)}.asm{$(G)}.obj:
	set INCLUDE=$(ALLINC)
	$(AS) $(AFLAGS) %s,$* $(LSTMAC);
	set INCLUDE=$(OLDINC)

{$(Q)}.asm{$(G)}.obj:
	set INCLUDE=$(ALLINC)
	$(AS) $(AFLAGS) $(Q)$(@B),$* $(LSTMAC);
	set INCLUDE=$(OLDINC)

.asm{$(G)}.obj:
	set INCLUDE=$(ALLINC)
	$(AS) $(AFLAGS) $(@B),$* $(LSTMAC);
	set INCLUDE=$(OLDINC)

.c{$(G)}.obj:
	set INCLUDE=$(ALLINC)
	$(CC) /c $(CFLAGS) $(CVFLAGS) /D$(VER) /Fo$(@R).OBJ $<
	set INCLUDE=$(OLDINC)

.c{$(O)}.obj:
	set INCLUDE=$(ALLINC)
	$(CC) /c $(CFLAGS) $(CVFLAGS) /D$(VER) /Fo$(@R).OBJ $<
	set INCLUDE=$(OLDINC)

.c{$(O)}.pro:
	@set INCLUDE=$(ALLINC)
	@if exist \dev\ERROUT$$$$ $(ERRPATH)errout off >\dev\nul
	$(CC) /EP /DCVDBG /DPROTO /DUPDATE=1 /DREDUIT=1 /DWINDOWS30=1 $< > $*.tmp
	@if exist \dev\ERROUT$$$$ $(ERRPATH)errout on >\dev\nul
	@set INCLUDE=$(OLDINC)
	$(CC) /Zg /Tc$*.tmp > $*.tm2
	@xc /r $*.tm2 $*.pro
	@rm $*.tm?

{$(M)}.c{$(O)}.pro:
	@set INCLUDE=$(ALLINC);$(M)
	$(CC) /EP /DCVDBG /DPROTO /DUPDATE=1 /DREDUIT=1 /DWINDOWS30=1 $< > $*.tmp
	@set INCLUDE=$(OLDINC)
	$(CC) /Zg /Tc$*.tmp > $*.tm2
	@xc /r $*.tm2 $*.pro
	@rm $*.tm?

OBJS=	$(O)drve.obj		 $(O)files.obj		 $(O)inprint.obj\
	$(O)install.obj 	 $(O)misc.obj		 $(O)scrn.obj\
	$(O)security.obj	 $(O)serialno.obj	 $(O)pd_sub.obj\
	$(O)versdata.obj	 $(G)versret.obj	 $(O2)crc32.obj\
	$(G)multime.obj 	 $(G)versbeta.obj	 \
	$(O)ins_pos.obj 	 $(O)mxz_adf.obj	 $(G)zztail.obj\

ALL: DIR\
	 $(O)drve.pro		 $(O)files.pro		 $(O)inprint.pro \
	 $(O)install.pro	 $(O)misc.pro		 $(O)scrn.pro	\
	 $(O)security.pro	 $(O)serialno.pro	 $(O)mxz_adf.pro\
	 $(O)$(VER).EXE 	 $(O)$(VER).SSF 	 \
	 $(BD)$(PROD).OVL	 $(BD)setupdos.cfg

DEL:
	-rm $(O)*.* $(G)*.*

DIR:
	vdir -c $(O) $(G)

pvcs.cfg:
	@echo <<pvcs.cfg
REFERENCEDIR=WRITEPROTECT P:\MAX\install\*
VCSDIR = P:\PVCS\MAX\install\*
ALIAS ALL P:\PVCS\MAX\install\*.*,p:\pvcs\max\install\udlocal2.bav
<<KEEP

GET: pvcs.cfg
	$(GETCMD) $(MAKEDIR)

DEPSCAN: makefile
	depscan >instdep.inc @<<
-s$(E)=$$(E),$(M)=$$(M)
*.c *.cpp *.asm
$(E)multime.asm
$(Q)versret.asm
$(M)ins_pos.asm
$(M)ins_adf.c
<<NOKEEP

makefile:	instdep.inc $(H)makefile.inc

!include instdep.inc
!include $(H)makefile.inc

$(O)$(VER).EXE: $(OBJS) 	 $(LIBS)		makefile
	Set LIB=$(LIB)
	$(LD) @<<$(O)$(VER).arf
		$(OBJS: =+^
		)
		$*.exe $(LFLAGS)
		$*.map
		$(LIBS: =+^
		)+
		$(GLIBS)
		NUL
<<KEEP

$(O)$(VER).SSF: $(O)$(VER).exe
		mapssf -t$* $*.map
		ff $*

$(BD)$(PROD).OVL: $(O)$(VER).EXE
	xc /r $(**R).EXE	$@
	xc /r $(**R).MAP	$(BD)$(PROD).*
	xc /r $(**R).SSF	$(BD)$(PROD).*


$(O)drve.obj:	 drve.c 	 $(DRVE_DEP)

$(O)files.obj:	 files.c	 $(FILES_DEP)

$(O)inprint.obj: inprint.c	 $(INPRINT_DEP)

$(O)install.obj: install.c	 $(INSTALL_DEP)

$(O)misc.obj:	 misc.c 	 $(MISC_DEP)

$(G)multime.obj: $(E)multime.asm $(MULTIME_ADEP)

$(O)scrn.obj:	 scrn.c 	 $(SCRN_DEP)

$(O)security.obj: security.c	 $(SECURITY_DEP)

$(O)serialno.obj: serialno.c	 $(SERIALNO_DEP)

$(O)mxz_adf.obj: mxz_adf.c	 $(O)INS_ADF.PRO	$(MXZ_ADF_DEP)

$(O)pd_sub.obj:  pd_sub.asm	 $(PD_SUB_ADEP)

$(O)versdata.obj: versdata.asm	 $(VERSDATA_ADEP)

$(G)versbeta.obj: versbeta.asm	 $(VERSBETA_ADEP)

$(G)versret.obj: $(Q)versret.asm $(VERSRET_ADEP)

$(G)zztail.obj: zztail.asm	 $(ZZTAIL_ADEP)
	set INCLUDE=$(ALLINC)
	$(AS) /Zd /Ml $(@B),$* $(LSTMAC);
	set INCLUDE=$(OLDINC)

$(O)INS_POS.OBJ:  $(M)INS_POS.ASM $(INS_POS_ADEP)

$(O)INS_ADF.PRO:  $(M)INS_ADF.C $(INS_ADF_DEP)

